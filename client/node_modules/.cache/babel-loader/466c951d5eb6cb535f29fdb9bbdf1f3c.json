{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nexport const history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst persistConfig = {\n  \"key\": \"use-app\",\n  storage: storage,\n  whitelist: \"user\"\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\nexport default function configureStore(initialState) {\n  const store = createStore(persistedReducer, initialState, applyMiddleware(routerMiddleware(history), sagaMiddleware));\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept(\"./reducers\", () => {\n      store.replaceReducer(rootReducer(history));\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["D:/Cursus 1337/Matcha1/client/src/store.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","rootSaga","rootReducer","createBrowserHistory","routerMiddleware","persistReducer","storage","history","sagaMiddleware","persistConfig","whitelist","persistedReducer","configureStore","initialState","store","run","module","hot","accept","replaceReducer"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AACA,SAAQC,gBAAR,QAA+B,wBAA/B;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAO,MAAMC,OAAO,GAAGJ,oBAAoB,EAApC;AAEP,MAAMK,cAAc,GAAGR,oBAAoB,EAA3C;AAEA,MAAMS,aAAa,GAAG;AACpB,SAAO,SADa;AAEpBH,EAAAA,OAAO,EAAEA,OAFW;AAGpBI,EAAAA,SAAS,EAAE;AAHS,CAAtB;AAKA,MAAMC,gBAAgB,GAAGN,cAAc,CAACI,aAAD,EAAgBP,WAAW,CAACK,OAAD,CAA3B,CAAvC;AAEA,eAAe,SAASK,cAAT,CAAyBC,YAAzB,EAAuC;AACpD,QAAMC,KAAK,GAAGf,WAAW,CACvBY,gBADuB,EAEvBE,YAFuB,EAGvBf,eAAe,CAACM,gBAAgB,CAACG,OAAD,CAAjB,EAA4BC,cAA5B,CAHQ,CAAzB;AAKAA,EAAAA,cAAc,CAACO,GAAf,CAAmBd,QAAnB;;AAEA,MAAIe,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,MAAM;AACpCJ,MAAAA,KAAK,CAACK,cAAN,CAAqBjB,WAAW,CAACK,OAAD,CAAhC;AACD,KAFD;AAGD;;AACD,SAAOO,KAAP;AACD","sourcesContent":["import {applyMiddleware, createStore} from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas\";\r\nimport rootReducer from \"./reducers\";\r\nimport {createBrowserHistory} from \"history\";\r\nimport {routerMiddleware} from \"connected-react-router\";\r\nimport {persistReducer} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst persistConfig = {\r\n  \"key\": \"use-app\",\r\n  storage: storage,\r\n  whitelist: \"user\",\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\r\n\r\nexport default function configureStore (initialState) {\r\n  const store = createStore(\r\n    persistedReducer,\r\n    initialState,\r\n    applyMiddleware(routerMiddleware(history), sagaMiddleware)\r\n  );\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"./reducers\", () => {\r\n      store.replaceReducer(rootReducer(history));\r\n    });\r\n  }\r\n  return store;\r\n}"]},"metadata":{},"sourceType":"module"}