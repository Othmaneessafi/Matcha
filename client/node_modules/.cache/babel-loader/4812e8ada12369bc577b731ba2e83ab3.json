{"ast":null,"code":"import { takeLatest, put, call, delay } from \"redux-saga/effects\";\nimport { push } from \"react-router-redux\";\nimport { loginError, loginUserSuccess, loginErrorField } from \"../actions/loginAction\";\nimport { updateUserSuccess } from '../actions/userAction';\nimport { request } from './helper';\n\nconst login = function* login({\n  data\n}) {\n  try {\n    const username = data.username;\n    const password = data.password;\n    const response = yield call(request, {\n      \"url\": \"http://localhost:3001/signin\",\n      \"data\": {\n        username,\n        password\n      },\n      \"method\": \"post\"\n    });\n\n    if (response.data.isValid) {\n      const user = response.data.user;\n      yield put(loginUserSuccess());\n      yield put(updateUserSuccess(user));\n      yield put(push(\"/browsing\"));\n    } else {\n      yield put(loginErrorField(response.data.errorField));\n      yield delay(4000);\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(loginError(\"error.response.statusText\", \"error.response.status\"));\n    }\n  }\n};\n\nexport default function* log() {\n  yield takeLatest(\"LOGIN_USER\", login);\n}","map":{"version":3,"sources":["D:/Cursus 1337/Matcha/client/src/sagas/loginSaga.js"],"names":["takeLatest","put","call","delay","push","loginError","loginUserSuccess","loginErrorField","updateUserSuccess","request","login","data","username","password","response","isValid","user","errorField","error","log"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,KAAhC,QAA6C,oBAA7C;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,eAAvC,QAA8D,wBAA9D;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,UAAxB;;AAEA,MAAMC,KAAK,GACT,UAAUA,KAAV,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA0B;AACxB,MAAI;AACF,UAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAtB;AACA,UAAMC,QAAQ,GAAGF,IAAI,CAACE,QAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMZ,IAAI,CAACO,OAAD,EAAU;AACnC,aAAO,8BAD4B;AAEnC,cAAQ;AACNG,QAAAA,QADM;AAENC,QAAAA;AAFM,OAF2B;AAMnC,gBAAU;AANyB,KAAV,CAA3B;;AASA,QAAIC,QAAQ,CAACH,IAAT,CAAcI,OAAlB,EAA2B;AACzB,YAAOC,IAAI,GAAGF,QAAQ,CAACH,IAAT,CAAcK,IAA5B;AACA,YAAMf,GAAG,CAACK,gBAAgB,EAAjB,CAAT;AACA,YAAML,GAAG,CAACO,iBAAiB,CAACQ,IAAD,CAAlB,CAAT;AACA,YAAMf,GAAG,CAACG,IAAI,CAAC,WAAD,CAAL,CAAT;AACD,KALD,MAMK;AACH,YAAMH,GAAG,CAACM,eAAe,CAACO,QAAQ,CAACH,IAAT,CAAcM,UAAf,CAAhB,CAAT;AACA,YAAMd,KAAK,CAAC,IAAD,CAAX;AACD;AACF,GAtBD,CAsBE,OAAOe,KAAP,EAAc;AACd,QAAIA,KAAK,CAACJ,QAAV,EAAoB;AAClB,YAAMb,GAAG,CAACI,UAAU,CAAC,2BAAD,EAA8B,uBAA9B,CAAX,CAAT;AACD;AACF;AACF,CA7BH;;AA+BA,eAAe,UAAUc,GAAV,GAAgB;AAC7B,QAAMnB,UAAU,CAAC,YAAD,EAAeU,KAAf,CAAhB;AACD","sourcesContent":["import { takeLatest, put, call, delay } from \"redux-saga/effects\";\r\nimport { push } from \"react-router-redux\";\r\nimport { loginError, loginUserSuccess, loginErrorField } from \"../actions/loginAction\";\r\nimport {updateUserSuccess} from '../actions/userAction'\r\nimport { request } from './helper';\r\n\r\nconst login =\r\n  function *login({ data }) {\r\n    try {\r\n      const username = data.username;\r\n      const password = data.password;\r\n      const response = yield call(request, {\r\n        \"url\": \"http://localhost:3001/signin\",\r\n        \"data\": {\r\n          username,\r\n          password\r\n        },\r\n        \"method\": \"post\"\r\n      });\r\n\r\n      if (response.data.isValid) {\r\n        const  user = response.data.user;\r\n        yield put(loginUserSuccess());\r\n        yield put(updateUserSuccess(user));\r\n        yield put(push(\"/browsing\"));\r\n      }\r\n      else {\r\n        yield put(loginErrorField(response.data.errorField))\r\n        yield delay(4000);\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        yield put(loginError(\"error.response.statusText\", \"error.response.status\"));\r\n      }\r\n    }\r\n  };\r\n\r\nexport default function *log() {\r\n  yield takeLatest(\"LOGIN_USER\", login);\r\n}"]},"metadata":{},"sourceType":"module"}